<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<alignment xmlns="http://www.esdi-humboldt.eu/hale/alignment">
    <customFunction>
        <cf:custom-property-function xmlns:cf="http://www.esdi-humboldt.eu/hale/custom-function" identifier="adv.inspire.id.default" name="AdV INSPIRE localId" type="groovy">
            <cf:input eager="true" maxOccurs="-1" minOccurs="1" name="id">
                <cf:binding>java.lang.String</cf:binding>
            </cf:input>
            <cf:output eager="false" maxOccurs="1" minOccurs="1">
                <cf:binding>java.lang.String</cf:binding>
            </cf:output>
            <cf:definition>
                <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
// alle Quell-IDs als Liste
def identifiers = id.p.values()

def id

if (identifiers.size() == 1) {
  // verwende Original-ID falls nur eine Quelle
  id = identifiers[0]
}
else {
  // sortieren (TODO spezielle Ordnung benötigt?)
  identifiers = identifiers.sort()

  def identString = identifiers.join()

  id = '_' + _.crypto.sha256(identString)
}

// Ziel-Typ als Präfix
if (true /*_params.useTargetTypePrefix*/) {
  def targetType = _targetType.definition.name.localPart
  if (targetType) {
    if (targetType.endsWith('Type')) {
      targetType = targetType[0..-5]
    }
  
    if (!id.startsWith('_')) {
      id = '_' + id
    }
    id = targetType + id
  }
}

id
</core:text>
            </cf:definition>
            <cf:explanation>
                <cf:locale country="" language="" variant="">
                    <cf:template>
                        <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
Bestimmung einer INSPIRE localId oder GML id aus Fachkennzeichen oder AAA-ObjektIDs.

Für eine einzige Quell-ID wird diese direkt herangezogen.

Andernfalls wird unter Verwendung des SHA256-Algorithmus ein Hash-Wert aus den sortierten und dann konkatenierten Quell-IDs gebildet und hexadezimal kodiert.

Außerdem wird der Name des Feature-Typs des Ziel-Modells als Präfix vorangestellt. Dabei wird sichergestellt dass der Typ-Name von den weiteren Teilen der ID durch einen Unterstrich getrennt ist.
</core:text>
                    </cf:template>
                </cf:locale>
            </cf:explanation>
        </cf:custom-property-function>
    </customFunction>
    <customFunction>
        <cf:custom-property-function xmlns:cf="http://www.esdi-humboldt.eu/hale/custom-function" identifier="adv.inspire.GeographicalName.simple" name="Einfacher GeographicalName (Deutsch)" type="groovy">
            <cf:input eager="false" maxOccurs="1" minOccurs="1" name="spelling">
                <cf:binding>java.lang.String</cf:binding>
            </cf:input>
            <cf:input eager="true" maxOccurs="1" minOccurs="0" name="source">
                <cf:binding>java.lang.String</cf:binding>
                <cf:type name="AA_ModellartPropertyType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </cf:input>
            <cf:output eager="false" maxOccurs="1" minOccurs="1">
                <cf:type name="GeographicalNameType" ns="http://inspire.ec.europa.eu/schemas/gn/4.0"/>
            </cf:output>
            <cf:param maxOccurs="1" minOccurs="0" name="source">
                <cf:description>
                    <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">Quelle des Namens. Wird verwendet falls nicht aus Quell-Objekt bestimmt.</core:text>
                </cf:description>
                <cf:display value="Source of name"/>
                <cf:binding>java.lang.String</cf:binding>
            </cf:param>
            <cf:definition>
                <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
def sourceNameFromModellart() {
	if (source) {
		def modelle = source.p.AA_Modellart.advStandardModell.values()
		if (modelle) {
			//TODO Logik um korrektes anzugebendes Modell zu bestimmen?
			//XXX Vorerst wird erstes Modell zurückgegeben
			return modelle[0]
		}
	}
	
	null
}

if (spelling) {
	_target {
	    
		def sourceName_input = sourceNameFromModellart()
		def sourceName_var = _project.vars.get('ADV_MODELLART', null)
		
		// Priorität 1 - feste Quelle
		if (_params.source) {
			sourceOfName( _params.source )
		}
		// Priorität 2 - aus Projektvariable
		else if (sourceName_var) {
			sourceOfName( sourceName_var )
		}
		// Priorität 3 - aus Quell-Objekt
		else if (sourceName_input) {
			sourceOfName( sourceName_input )
		}
		else {
			sourceOfName {
				nilReason( 'unknown' )
			}
		}
		pronunciation {
			nilReason( 'unpopulated' )
		}
		nameStatus {
			nilReason( 'unpopulated' )
		}
		nativeness {
			nilReason( 'unpopulated' )
		}
		spelling {
			SpellingOfName {
				text( spelling )
				script ( 'Latn' )
			}
		}
		language( 'deu' )
	}
}
else {
	throw new NoResultException()
}
</core:text>
            </cf:definition>
            <cf:explanation>
                <cf:locale country="" language="" variant="">
                    <cf:template>
                        <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
Bildet ein GeographicalName-Objekt zu einem einfachen Namen.

Die Sprache wird als Deutsch angenommen.

&lt;% if (_params.source) {
  out &lt;&lt; "Die Quelle des Namens wird als ${_params.source} angegeben."
} else if (source) {
  out &lt;&lt; "Die Quelle des Namens wird aus einer Projekt-Variable oder dem Quell-Attribut $source bestimmt."
} else {
  out &lt;&lt; "Die Quelle des Namens wird aus einer Projekt-Variable bestimmt, falls vorhanden."
} %&gt;
</core:text>
                    </cf:template>
                </cf:locale>
            </cf:explanation>
        </cf:custom-property-function>
    </customFunction>
    <customFunction>
        <cf:custom-property-function xmlns:cf="http://www.esdi-humboldt.eu/hale/custom-function" identifier="adv.inspire.namespace" name="AdV INSPIRE ID namespace" type="groovy">
            <cf:output eager="false" maxOccurs="1" minOccurs="1">
                <cf:binding>java.lang.String</cf:binding>
            </cf:output>
            <cf:definition>
                <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
// verwende Wert aus Projekt-Variable "INSPIRE_NAMESPACE"
_project.vars.INSPIRE_NAMESPACE
</core:text>
            </cf:definition>
            <cf:explanation>
                <cf:locale country="" language="" variant="">
                    <cf:template>
                        <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
Setzt $_target auf den für den Datensatz vorgegebenen festen INSPIRE Namespace.

Der für Datenanbieter und Datensatz spezifische Namespace muss dafür als Vorgabe (Projekt-Variable) konfiguriert werden.
</core:text>
                    </cf:template>
                </cf:locale>
            </cf:explanation>
        </cf:custom-property-function>
    </customFunction>
    <customFunction>
        <cf:custom-property-function xmlns:cf="http://www.esdi-humboldt.eu/hale/custom-function" identifier="adv.uom.toucum" name="AdV Maßeinheit zu UCUM" type="groovy">
            <cf:input eager="false" maxOccurs="1" minOccurs="1" name="uom">
                <cf:binding>java.lang.String</cf:binding>
            </cf:input>
            <cf:output eager="false" maxOccurs="1" minOccurs="1">
                <cf:binding>java.lang.String</cf:binding>
            </cf:output>
            <cf:definition>
                <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
if (!uom) {
	throw new NoResultException()
}

def result

// Mapping auf UCUM
switch(uom) {
case 'urn:adv:uom:m2':
	result = 'm2'
	break
case 'urn:adv:uom:m':
	result = 'm'
	break
}

if (!result) {
	// Transformations-Warnung falls kein Mapping auf UCUM vorhanden
	_log.warn("Unknown UCUM representation for unit of measurment $uom, using code as-is")
	result = uom
}

result
</core:text>
            </cf:definition>
            <cf:explanation>
                <cf:locale country="" language="" variant="">
                    <cf:template>
                        <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
Abbildung von Maßeinheiten aus AdV URNs nach UCUM

*Keine vollständige Abbildung, muss ggf. ergänzt werden.*

Aktuell ist folgende Abbildung umgesetzt:

- `urn:adv:uom:m2` zu `m2`
- `urn:adv:uom:m`zu `m`

</core:text>
                    </cf:template>
                </cf:locale>
            </cf:explanation>
        </cf:custom-property-function>
    </customFunction>
    <customFunction>
        <cf:custom-property-function xmlns:cf="http://www.esdi-humboldt.eu/hale/custom-function" identifier="adv.inspire.identifier" name="AdV INSPIRE identifier (URI)" type="groovy">
            <cf:input eager="true" maxOccurs="-1" minOccurs="1" name="id">
                <cf:binding>java.lang.String</cf:binding>
            </cf:input>
            <cf:output eager="false" maxOccurs="1" minOccurs="1">
                <cf:type name="CodeWithAuthorityType" ns="http://www.opengis.net/gml/3.2"/>
            </cf:output>
            <cf:definition>
                <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
// alle Quell-IDs als Liste
def identifiers = id.p.values()

def id

if (identifiers.size() == 1) {
  // verwende Original-ID falls nur eine Quelle
  id = identifiers[0]
}
else {
  // sortieren (TODO spezielle Ordnung benötigt?)
  identifiers = identifiers.sort()

  def identString = identifiers.join()

  id = '_' + _.crypto.sha256(identString)
}

// Ziel-Typ als Präfix
if (true /*_params.useTargetTypePrefix*/) {
  def targetType = _targetType.definition.name.localPart
  if (targetType) {
    if (targetType.endsWith('Type')) {
      targetType = targetType[0..-5]
    }
  
    if (!id.startsWith('_')) {
      id = '_' + id
    }
    id = targetType + id
  }
}

// Verknüpfung mit namespace
def namespace = _project.vars.INSPIRE_NAMESPACE
if (namespace) {
  if (!namespace.endsWith('/')) {
    namespace = namespace + '/'
  }
  
  // namespace und id als Ergebnis
  _target(namespace + id) {
	codeSpace( 'http://inspire.ec.europa.eu/ids' )
  }
}
else {
  // nur id als Ergebnis
  _target(id) {
	codeSpace( 'http://inspire.ec.europa.eu/ids' )
  }
}
</core:text>
            </cf:definition>
            <cf:explanation>
                <cf:locale country="" language="" variant="">
                    <cf:template>
                        <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
Bestimmung eines GML identifiers URI bestehend INSPIRE namespace und localId aus Fachkennzeichen oder AAA-ObjektIDs.

Für eine einzige Quell-ID wird diese direkt für die localId herangezogen. Andernfalls wird unter Verwendung des SHA256-Algorithmus ein Hash-Wert aus den sortierten und dann konkatenierten Quell-IDs gebildet und hexadezimal kodiert.
Als Präfix wird der localId der Name des Feature-Typs des Ziel-Modells vorangestellt. Dabei wird sichergestellt dass der Typ-Name von den weiteren Teilen der ID durch einen Unterstrich getrennt ist.

Der für Datenanbieter und Datensatz spezifische Namespace muss als Vorgabe (Projekt-Variable) konfiguriert werden.

Der `codeSpace` für den GML identifier wird als `http://inspire.ec.europa.eu/ids` gesetzt.
</core:text>
                    </cf:template>
                </cf:locale>
            </cf:explanation>
        </cf:custom-property-function>
    </customFunction>
</alignment>
